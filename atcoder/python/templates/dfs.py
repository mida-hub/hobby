#!/usr/bin/env python3
# atc001a
from collections import deque

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    h, w = map(int, input().split())
    c_hw = []
    sx = 0
    sy = 0
    gx = 0
    gy = 0
    for i in range(h):
        c_ij = input()
        s_index = c_ij.find('s')
        g_index = c_ij.find('g')

        if s_index >= 0:
            sy, sx = i, s_index

        if g_index >= 0:
            gy, gx = i, g_index

        c_hw.append(list(c_ij))
    dist = [[-1] * w for x in range(h)]
    dist[sy][sx] = 1

    # print(h, w)
    # print(c_hw)
    # print(sx, sy)
    # print(gx, gy)
    # print(dist)

    left = [-1, 0]
    right = [1, 0]
    up = [0, -1]
    down = [0, 1]

    ops = [left, right, up, down]

    deq = deque()
    deq.append([sx, sy])

    while deq:
        # print(deq)
        d = deq.pop()
        d_c = d[0]
        d_r = d[1]

        for op in ops:
            op_c = op[0]
            op_r = op[1]

            row = d_r + op_r
            col = d_c + op_c

            # 範囲外
            if row < 0 or h <= row or col < 0 or w <= col:
                continue

            # 壁
            if c_hw[row][col] == '#':
                continue

            # 探索済み
            if dist[row][col] != -1:
                continue
            # print(f'op={op}')
            # print(f'd_r={d_r}, d_c={d_c}')
            # print(f'row={row}, col={col}')
            dist[row][col] = 1
            deq.append([col, row])

    # for d in dist:
    #     print(d)
    # print(dist[gy][gx])
    if dist[gy][gx] == 1:
        print('Yes')
    else:
        print('No')


if __name__ == '__main__':
    main()
