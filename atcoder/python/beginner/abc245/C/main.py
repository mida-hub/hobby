#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, K: int, A: "List[int]", B: "List[int]"):
    counter = 0

    pre_list = [A[0], B[0]]
    
    for i in range(1, N):
        tmp = []
        for pre in pre_list:
            if abs(A[i] - pre) <= K:
                tmp.append(A[i])

            if abs(B[i] - pre) <= K:
                tmp.append(B[i])
        pre_list = list(set(tmp))

        if len(pre_list) == 0:
            print(NO)
            return

    print(YES)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, A, B)

if __name__ == '__main__':
    main()
