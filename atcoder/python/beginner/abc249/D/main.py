#!/usr/bin/env python3
import sys
from bisect import bisect_left


def solve(N: int, A: "List[int]"):
    A = sorted(A)
    total = 0
    for i in A:
        for j in A:
            if i < j:
                break
            left_i_j = bisect_left(A, (i // j))
            for k in A[left_i_j:]:
                if j * k > i:
                    break
                if i == j * k:
                    total += 1
    print(total)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
