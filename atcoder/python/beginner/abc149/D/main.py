#!/usr/bin/env python3
import sys

# R:グー、S:チョキ、P:パー
def solve(N: int, K: int, R: int, S: int, P: int, T: str):
    # print(N, K)
    # print(R, S, P)
    # print(T)

    # 勝ちポイント
    rsp_winner_point = {
        'r': P,
        's': R,
        'p': S
    }
    # 勝ち、引き分け、負けマッピング
    rsp_mapping = {
        'r': ['p', 'r', 's'],
        's': ['r', 's', 'p'], 
        'p': ['s', 'p', 'r'],
    }

    # 高橋くんが出すプラン
    P = []

    total = 0
    for i in range(N):
        # print(f'{i+1}回目')
        # K回目までは素直に勝つ、K回目からは今回の手とK回前の手を比較する
        if i - K < 0 or rsp_mapping[T[i]][0] != P[i-K]:
            P.append(rsp_mapping[T[i]][0])
            total += rsp_winner_point[T[i]]
        # K回後の手を確認して引き分けか負けを選択する
        else:
            if i + K < N:
                # K回後に勝てる手と違う手を出す
                if rsp_mapping[T[i+K]][0] != rsp_mapping[T[i]][1]:
                    P.append(rsp_mapping[T[i]][1])
                else:
                    P.append(rsp_mapping[T[i]][2])
            # K回後がない場合は何でも出せる
            else:
                P.append(rsp_mapping[T[i]][1])

        # print(total)

    print(total)
    # print(P)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    R = int(next(tokens))  # type: int
    S = int(next(tokens))  # type: int
    P = int(next(tokens))  # type: int
    T = next(tokens)  # type: str
    solve(N, K, R, S, P, T)

if __name__ == '__main__':
    main()
