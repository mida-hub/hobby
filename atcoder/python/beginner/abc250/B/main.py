#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int):
    for i in range(N * A):
        for j in range(N * B):
            flag = f"{(i//A) % 2}{(j//B) % 2}"
            # print(f"{(i//A) % 2}{(j//B) % 2} ", end="")
            if flag == "00" or flag == "11":
                print('.', end="")
            else:
                print('#', end="")
        print()
    
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    solve(N, A, B)

if __name__ == '__main__':
    main()
