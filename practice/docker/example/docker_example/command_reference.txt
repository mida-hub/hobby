docker image pull gihyodocker/echo:latest
# t option : assign image name
# p option : port fowarding
docker container run -t -p 9000:8000 gihyodocker/echo:latest
# d option : stay background
dcoker container run -d gihyodocker/echo:latest
docker image build -t example/echo:latest .
docker image ls
docker help
# f option : assign Dockerfile
docker image build -f Dockerfile-test -t example/echo:latest .
# pull option : docker image pull with force
docker image build --pull=true -t example/echo:latest .
docker search --limit 5 mysql
# tag option : assign tag name
docker image tag example/echo:latest example/echo:0.1.0
docker image push stormcattest/echo:latest
# タグのついていないイメージの一括削除
docker image prune
docker rmi imageid
docker rmi $(docker image ls -q)

docker container ls
docker container stop
docker container restart echo
docker container rm
docker container logs
docker container logs [service_name]
# tail
docker container logs -f

docker container exec -it echo sh
docker container cp
# 停止コンテナ一括削除
docker container prune
# 停止コンテナ、タグ無しイメージ、未使用ボリューム、未使用ネットワーク一括削除
docker system prune

docker-compose up -d
# 一回目の立ち上げではbuildを使用する
docker-compose up --build
docker-compose down
docker-compose ps
# イメージ再構築 Dockerfile更新時などに使用する
docker-compose build

# コンテナを立ち上けっぱなしにする
tty: true
